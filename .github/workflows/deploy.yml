name: Deploy

on:
  push:
    branches:
      - master
env:
  HEROKU_APP_NAME: 'vampi-example'
  ACTIVE_API_URL: 'https://porsche-poc.nonamesec.com/active'
  ACTIVE_TEST_SUITE_ID: 'a5f21d25-0f05-4f70-8bf5-211a0133130f'
  ACTIVE_SEVERITY_THRESHOLD: 'high'
  ACTIVE_BASE_URL: ''

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: write netrc file
        run: |
          cat >~/.netrc <<EOF  \
          machine api.heroku.com \
            login ${{secrets.HEROKU_EMAIL}} \
            password ${{secrets.HEROKU_API_KEY}} \
          machine git.heroku.com \
            login ${{secrets.HEROKU_EMAIL}} \
            password ${{secrets.HEROKU_API_KEY}} \
          EOF
      - name: install heroku cli
        run: curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
      - name: push container
        run: heroku container:push web --app ${{ env.HEROKU_APP_NAME }}
      - name: release change
        run: heroku container:release web --app ${{ env.HEROKU_APP_NAME }}

#  noname-scan:
#    needs: deploy
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: docker login
#        uses: docker/login-action@v1
#        with:
#          registry: nonamesec.jfrog.io/noname-docker-release
#          username: devops@nonamesecurity.com
#          password: ${{ secrets.ACTIVE_REGISTRY_PASSWORD }}
#
#      - name: security test
#        run: |
#          docker run \
#          --pull always \
#          nonamesec.jfrog.io/noname-docker-release/active-cli:0.8.9 \
#          scan \
#          --api-url=${{ env.ACTIVE_API_URL }} \
#          --api-token=${{ secrets.ACTIVE_API_TOKEN }} \
#          --test-suite-id=$ACTIVE_TEST_SUITE_ID \
#          --severity-threshold=${{ env.ACTIVE_SEVERITY_THRESHOLD }} \
#          --base-url=${{ env.ACTIVE_BASE_URL }}
#
#  apisec-scan:
#    needs: deploy
#    permissions:
#      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: APIsec scan
#        uses: apisec-inc/apisec-run-scan@f62d0c6fae8a80f97b091a323befdb56e6ad9993
#        with:
#          # The APIsec username with which the scans will be executed
#          apisec-username: ${{ secrets.apisec_username }}
#          # The Password of the APIsec user with which the scans will be executed
#          apisec-password: ${{ secrets.apisec_password}}
#          # The name of the project for security scan
#          apisec-project: "VAmPI"
#          # The name of the sarif format result file The file is written only if this property is provided.
#          sarif-result-file: "apisec-results.sarif"
#      - name: Import results
#        uses: github/codeql-action/upload-sarif@v2
#        with:
#          sarif_file: ./apisec-results.sarif
